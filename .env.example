# =============================================================================
# AUTHENTICATION CONFIGURATION
# =============================================================================

# Enable OAuth 2.0 / OIDC authentication (recommended for production)
# Set to "false" to use JWT authentication (development only)
OAUTH_ENABLED=true

# --- OAuth 2.0 Configuration ---
# Choose one provider: google, auth0, azure, cognito, okta, github, generic
OIDC_PROVIDER=google

# OAuth Client Credentials (obtain from your Identity Provider)
OIDC_CLIENT_ID=your-client-id-here
OIDC_CLIENT_SECRET=your-client-secret-here

# Public URL of this server (required for OAuth callbacks)
OIDC_BASE_URL=http://localhost:8000

# Provider-specific settings (uncomment based on OIDC_PROVIDER):

# For Google: No additional settings needed

# For Auth0:
# OIDC_DOMAIN=your-tenant.auth0.com

# For Azure AD:
# OIDC_TENANT_ID=your-tenant-id

# For AWS Cognito:
# OIDC_REGION=us-east-1
# OIDC_USER_POOL_ID=your-user-pool-id
# OIDC_COGNITO_DOMAIN=your-app.auth.us-east-1.amazoncognito.com

# For Okta:
# OIDC_DOMAIN=your-domain.okta.com

# For GitHub: No additional settings needed

# For Generic OAuth Provider:
# OIDC_AUTHORIZATION_ENDPOINT=https://idp.example.com/oauth2/authorize
# OIDC_TOKEN_ENDPOINT=https://idp.example.com/oauth2/token
# OIDC_JWKS_URI=https://idp.example.com/.well-known/jwks.json
# OIDC_ISSUER=https://idp.example.com

# --- JWT Configuration (Fallback - Development Only) ---
# Only used if OAUTH_ENABLED=false
MCP_JWT_ALG=HS256
MCP_JWT_SECRET=change-this-dev-secret
MCP_JWT_ISSUER=https://local-issuer
MCP_JWT_AUDIENCE=boomi-mcp

# For production JWT (RS256):
# MCP_JWT_ALG=RS256
# MCP_JWT_JWKS_URI=https://your-idp.com/.well-known/jwks.json
# MCP_JWT_ISSUER=https://your-idp.com/
# MCP_JWT_AUDIENCE=boomi-mcp

# Server Configuration
MCP_HOST=127.0.0.1
MCP_PORT=8000
MCP_PATH=/mcp

# Storage Configuration (GCP Secret Manager)
SECRETS_BACKEND=gcp
GCP_PROJECT_ID=your-gcp-project-id

# For generating a secure JWT secret, run:
# python3 -c 'import secrets; print(secrets.token_urlsafe(32))'
